<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
/*
	taglib :*.jsp에서 java code를 사용하지 않고 HTML 친화적인 방법으로 
		확장된 기능을 사용하기 위해서 도입된 추가 기능
		원래는 *.jsp에 없던 기능이지만
		uri를 통해서 해당하는 기능을 import하여 *.jsp 파일 내에서 
		마치 HTML의 tag처럼 사용할 수 있게 만들어주는 확장 기능
		
	prefix : c로 만들어서
	c:set으로 사용

*/
%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>   
<!-- 해당 값을 rootPath라는 변수에 담아서 사용하겠다.
	c tag에 있는 lib를 사용하는 것
 -->
<c:set var="rootPath" value="${pageContext.request.contextPath}"/>
<!-- 원래 생성하면 있던 코드들 다 지우고 home.jsp에서 아래 5줄만 코드 붙여넣음 -->
 
<meta charset="UTF-8">
<meta name='viewport' content='width=device-width, initial-scale=1'>
<title>얼렁뚱땅 블로그</title>
<%
/*
<!-- 우리가 만든 style을 적용해주기 위하여 해당 경로에 있는 css 파일과 붙여주는 것 -->
<!-- blogcontroller만든 후에 스타일이 적용이 안되는 이유를 살펴보니(F12)눌러서
	css/main.css를 찾을 수 없다고 떠서
	href주소를 절대 주소로 바꿔줌.
	왜냐하면 해당 page는 localhost:8080/blog/blog/list로 blog를 두번 찾아서 들어가야 하기 때문
	
	근데 고객에게 배포했을 때 고객의 서버는 localhost가 아니다.
	우리가 배포해야 하는 파일이 100개인데... 이걸 다 바꾼다..?
	절대주소로 바꾸는 것이 가장 안전한 방법이지만 정말 비효율적이다.
	이를 해결하는 방법
	
	위의 taglib
	
	${pageContext.request.contextPath : https://localhost:8080/blog
	스프링에 이미 준비 되어 있는 시스템 변수
	이걸 사용해주면 우리가 어떤 컴퓨터에 설치를 해도 소스코드를 변경시킬 필요가 없다.
	

*/
%>
<link rel="stylesheet" type="text/css" href="${pageContext.request.contextPath}/static/css/main.css"/>